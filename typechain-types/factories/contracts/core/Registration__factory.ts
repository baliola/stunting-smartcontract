/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  Registration,
  RegistrationInterface,
} from "../../../contracts/core/Registration";

const _abi = [
  {
    inputs: [],
    name: "AlreadyExist",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyRemoved",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidHash",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEligible",
    type: "error",
  },
] as const;

export class Registration__factory {
  static readonly abi = _abi;
  static createInterface(): RegistrationInterface {
    return new Interface(_abi) as RegistrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Registration {
    return new Contract(address, _abi, runner) as unknown as Registration;
  }
}
